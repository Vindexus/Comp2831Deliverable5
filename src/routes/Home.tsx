import React, {ReactNode} from "react";
import {pppSection} from "../lib/css";
import './Home.css'
import {useSearchParams} from "react-router-dom";
import {useSetBreadcrumbs} from "../lib/store";

type ReportKey = 'daily-sales' | 'payroll' | 'profit-loss' | 'popular-times'

type PageData = {
	username: string
	reports: ReportKey[]
	routes: string[]
}

type Report = {
	icon: ReactNode,
	title: string
	description: string
	key: ReportKey
}


const reports : Report[] = [
	{
		icon: <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
			<path fillRule="evenodd" clipRule="evenodd"
						d="M16 5.63636C10.2763 5.63636 5.63636 10.2763 5.63636 16C5.63636 21.7236 10.2763 26.3636 16 26.3636C21.7237 26.3636 26.3638 21.7236 26.3638 16C26.3638 10.2763 21.7237 5.63636 16 5.63636ZM4 16C4 9.37258 9.37259 4 16 4C22.6274 4 28.0001 9.37258 28.0001 16C28.0001 22.6274 22.6274 28 16 28C9.37259 28 4 22.6274 4 16Z"
						fill="#454545"/>
			<path fillRule="evenodd" clipRule="evenodd" d="M26.909 16.7273H5.09082V15.2727H26.909V16.7273Z"
						fill="#454545"/>
			<path fillRule="evenodd" clipRule="evenodd"
						d="M15.2725 26.9091V5.09092H16.7271V26.9091H15.2725ZM21.2272 16C21.2272 12.0495 19.8066 8.14143 17.0215 5.55739L17.8871 4.62439C20.9811 7.49489 22.5 11.7686 22.5 16C22.5 20.2314 20.9811 24.5051 17.8871 27.3757L17.0215 26.4426C19.8066 23.8586 21.2272 19.9505 21.2272 16ZM9.63574 16C9.63574 11.7748 11.1051 7.50325 14.1048 4.63126L14.985 5.55057C12.2876 8.13316 10.9085 12.0435 10.9085 16C10.9085 19.9566 12.2876 23.867 14.985 26.4495L14.1048 27.3688C11.1052 24.4968 9.63576 20.2253 9.63574 16Z"
						fill="#454545"/>
			<path fillRule="evenodd" clipRule="evenodd"
						d="M15.9999 9.55994C19.9441 9.55994 23.9551 10.2893 26.6738 11.8081C26.9807 11.9795 27.0905 12.3671 26.9191 12.674C26.7478 12.9808 26.36 13.0906 26.0533 12.9192C23.5989 11.5482 19.8327 10.8327 15.9999 10.8327C12.1671 10.8327 8.40091 11.5482 5.94658 12.9192C5.63974 13.0906 5.25207 12.9808 5.08067 12.674C4.90928 12.3671 5.01906 11.9795 5.3259 11.8081C8.0448 10.2893 12.0557 9.55994 15.9999 9.55994ZM15.9999 22.0909C19.9441 22.0909 23.9551 21.3614 26.6738 19.8427C26.9807 19.6713 27.0905 19.2836 26.9191 18.9768C26.7478 18.6699 26.36 18.5602 26.0533 18.7315C23.5989 20.1025 19.8327 20.8181 15.9999 20.8181C12.1671 20.8181 8.40091 20.1025 5.94658 18.7316C5.63974 18.5602 5.25207 18.6699 5.08067 18.9768C4.90928 19.2836 5.01906 19.6713 5.3259 19.8427C8.0448 21.3614 12.0557 22.0909 15.9999 22.0909Z"
						fill="#454545"/>
		</svg>,
		title: 'Daily Sales Report',
		description: 'View total daily sales revenue, number of units sold, top-selling products, and more.',
		key: 'daily-sales'
	},
	{
		icon: <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
			<path fill-rule="evenodd" clip-rule="evenodd"
						d="M4 16.0001C4 9.37261 9.37259 4 16 4C22.6274 4 28 9.37261 28 16.0001C28 22.6275 22.6274 28.0001 16 28.0001C9.37259 28.0001 4 22.6275 4 16.0001ZM16 5.78885C10.3605 5.78885 5.78885 10.3606 5.78885 16.0001C5.78885 18.609 6.76728 20.9895 8.37724 22.7943C10.0756 20.4209 12.8567 18.8718 16.0007 18.8718C19.1443 18.8718 21.9251 20.4205 23.6235 22.7936C25.2331 20.9887 26.2112 18.6086 26.2112 16.0001C26.2112 10.3606 21.6394 5.78885 16 5.78885ZM22.3056 24.0322C20.9453 21.9978 18.6286 20.6607 16.0007 20.6607C13.3725 20.6607 11.0556 21.9982 9.69526 24.033C11.4313 25.3974 13.6206 26.2112 16 26.2112C18.3798 26.2112 20.5695 25.3972 22.3056 24.0322ZM11.5752 14.1265C11.5752 11.6826 13.5564 9.70142 16.0002 9.70142C18.4441 9.70142 20.4253 11.6826 20.4253 14.1265C20.4253 16.5704 18.4441 18.5515 16.0002 18.5515C13.5564 18.5515 11.5752 16.5704 11.5752 14.1265ZM16.0002 11.4903C14.5443 11.4903 13.364 12.6705 13.364 14.1265C13.364 15.5824 14.5443 16.7627 16.0002 16.7627C17.4562 16.7627 18.6364 15.5824 18.6364 14.1265C18.6364 12.6705 17.4562 11.4903 16.0002 11.4903Z"
						fill="#454545"/>
		</svg>,
		key: 'payroll',
		title: 'Employee Payroll Output Report',
		description: 'View employee payroll information, including hours worked, pay rate, and total pay.',
	},
	{
		icon: <span className={'fs-4 fw-bold'}>$</span>,
		key: 'profit-loss',
		title: 'Profit & Loss Report',
		description: 'A year-to-date summary of the revenue, costs, and expenses incurred.',
	},
	{
		icon: <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
			<path fill-rule="evenodd" clip-rule="evenodd"
						d="M10.4615 3C10.9713 3 11.3846 3.41328 11.3846 3.92308V4.84615H20.6154V3.92308C20.6154 3.41328 21.0287 3 21.5385 3C22.0482 3 22.4615 3.41328 22.4615 3.92308V4.84615H25.2308C26.7601 4.84615 28 6.08597 28 7.61538V24.2308C28 25.7601 26.7601 27 25.2308 27H6.76923C5.23982 27 4 25.7601 4 24.2308V7.61538C4 6.08597 5.23982 4.84615 6.76923 4.84615H9.53846V3.92308C9.53846 3.41328 9.95174 3 10.4615 3ZM20.6154 6.69231V7.61538C20.6154 8.12518 21.0287 8.53846 21.5385 8.53846C22.0482 8.53846 22.4615 8.12518 22.4615 7.61538V6.69231H25.2308C25.7405 6.69231 26.1538 7.10559 26.1538 7.61538V10.3846H5.84615V7.61538C5.84615 7.10559 6.25943 6.69231 6.76923 6.69231H9.53846V7.61538C9.53846 8.12518 9.95174 8.53846 10.4615 8.53846C10.9713 8.53846 11.3846 8.12518 11.3846 7.61538V6.69231H20.6154ZM5.84615 12.2308V24.2308C5.84615 24.7405 6.25943 25.1538 6.76923 25.1538H25.2308C25.7405 25.1538 26.1538 24.7405 26.1538 24.2308V12.2308H5.84615ZM15.0769 15C15.0769 14.4902 15.4902 14.0769 16 14.0769C16.5098 14.0769 16.9231 14.4902 16.9231 15C16.9231 15.5098 16.5098 15.9231 16 15.9231C15.4902 15.9231 15.0769 15.5098 15.0769 15ZM19.6923 14.0769C19.1825 14.0769 18.7692 14.4902 18.7692 15C18.7692 15.5098 19.1825 15.9231 19.6923 15.9231C20.2021 15.9231 20.6154 15.5098 20.6154 15C20.6154 14.4902 20.2021 14.0769 19.6923 14.0769ZM22.4615 15C22.4615 14.4902 22.8749 14.0769 23.3846 14.0769C23.8943 14.0769 24.3077 14.4902 24.3077 15C24.3077 15.5098 23.8943 15.9231 23.3846 15.9231C22.8749 15.9231 22.4615 15.5098 22.4615 15ZM23.3846 17.7692C22.8749 17.7692 22.4615 18.1825 22.4615 18.6923C22.4615 19.2021 22.8749 19.6154 23.3846 19.6154C23.8943 19.6154 24.3077 19.2021 24.3077 18.6923C24.3077 18.1825 23.8943 17.7692 23.3846 17.7692ZM18.7692 18.6923C18.7692 18.1825 19.1825 17.7692 19.6923 17.7692C20.2021 17.7692 20.6154 18.1825 20.6154 18.6923C20.6154 19.2021 20.2021 19.6154 19.6923 19.6154C19.1825 19.6154 18.7692 19.2021 18.7692 18.6923ZM16 17.7692C15.4902 17.7692 15.0769 18.1825 15.0769 18.6923C15.0769 19.2021 15.4902 19.6154 16 19.6154C16.5098 19.6154 16.9231 19.2021 16.9231 18.6923C16.9231 18.1825 16.5098 17.7692 16 17.7692ZM11.3846 18.6923C11.3846 18.1825 11.7979 17.7692 12.3077 17.7692C12.8175 17.7692 13.2308 18.1825 13.2308 18.6923C13.2308 19.2021 12.8175 19.6154 12.3077 19.6154C11.7979 19.6154 11.3846 19.2021 11.3846 18.6923ZM8.61538 17.7692C8.10559 17.7692 7.69231 18.1825 7.69231 18.6923C7.69231 19.2021 8.10559 19.6154 8.61538 19.6154C9.12518 19.6154 9.53846 19.2021 9.53846 18.6923C9.53846 18.1825 9.12518 17.7692 8.61538 17.7692ZM7.69231 22.3846C7.69231 21.8749 8.10559 21.4615 8.61538 21.4615C9.12518 21.4615 9.53846 21.8749 9.53846 22.3846C9.53846 22.8943 9.12518 23.3077 8.61538 23.3077C8.10559 23.3077 7.69231 22.8943 7.69231 22.3846ZM12.3077 21.4615C11.7979 21.4615 11.3846 21.8749 11.3846 22.3846C11.3846 22.8943 11.7979 23.3077 12.3077 23.3077C12.8175 23.3077 13.2308 22.8943 13.2308 22.3846C13.2308 21.8749 12.8175 21.4615 12.3077 21.4615ZM15.0769 22.3846C15.0769 21.8749 15.4902 21.4615 16 21.4615C16.5098 21.4615 16.9231 21.8749 16.9231 22.3846C16.9231 22.8943 16.5098 23.3077 16 23.3077C15.4902 23.3077 15.0769 22.8943 15.0769 22.3846ZM19.6923 21.4615C19.1825 21.4615 18.7692 21.8749 18.7692 22.3846C18.7692 22.8943 19.1825 23.3077 19.6923 23.3077C20.2021 23.3077 20.6154 22.8943 20.6154 22.3846C20.6154 21.8749 20.2021 21.4615 19.6923 21.4615Z"
						fill="#454545"/>
		</svg>,
		key: 'popular-times',
		title: 'Busiest Times Report',
		description: 'Which weekdays and which hours are the busiest.',
	},
]

export default function Home() {
	let [searchParams] = useSearchParams();
	useSetBreadcrumbs([])

	let data : PageData

	if (searchParams.get('user') === 'sophie') {
		data = {
			username: 'Sophie',
			reports: [],
			routes: [
				'Customer Account Setup',
				'Meal Order',
			]
		}
	}
	else {
		data = {
			username: 'Paulo',
			reports: ['daily-sales', 'payroll', 'profit-loss', 'popular-times'],
			routes: [
				'Customer Account Setup',
				'Meal Order',
				'CLDP Settings',
			]
		}
	}

	const accessibleReports = reports.filter((report) => data.reports.includes(report.key))

	return <div className={''}>
		<div className={pppSection + ' text-center fs-1 fw-bold'}>
			Welcome, {data.username}!
		</div>
		{accessibleReports.length > 0 && (
			<div className={'reports-container container col-md-8 py-4 px-4'}>
				<h3>Reports</h3>
				<div className={'reports gap-2'}>
					{accessibleReports.map((report) => (
						<div key={report.key} className={'p-2'}>
							{report.icon}
							<h6>{report.title}</h6>
							<p className={'fs-sm text-secondary'}>{report.description}</p>
						</div>
					))}
				</div>
			</div>
		)}
		<div className={pppSection}>
			<div className={'row gx-3 gy-2'}>
				{data.routes.map((label) => (
					<div key={label} className={'col-6'}>
						<div className={'p-2 border rounded home-go'}>
							<h4>{label}</h4>
							<button type={'button'} className={'btn btn-sm btn-dark'}>Go</button>
						</div>
					</div>
				))}
			</div>
		</div>
	</div>
}
